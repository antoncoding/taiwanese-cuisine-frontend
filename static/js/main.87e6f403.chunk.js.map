{"version":3,"sources":["Components/Compare/utils.js","Components/CroppedImg.js","Components/Compare/index.js","Components/Ranking/index.js","App.js","serviceWorker.js","index.js"],"names":["writeDB","winner","loser","a","fetch","then","res","console","log","catch","error","getList","response","json","list","CroppedImg","url","height","width","style","objectFit","src","alt","chooseFromList","targetList","Math","floor","random","length","removeFromList","item","filter","element","Compare","history","useHistory","useState","done","setDone","foodList","setFoodList","indexList","updateIndexList","optionAIdx","setOptionAIdx","optionBIdx","setOptionBIdx","useMemo","_foodList","initIndexs","Array","from","keys","sort","slice","b","_list","paddingTop","paddingBottom","textAlign","fontSize","padding","display","maxWidth","onClick","newOptionB","Image","Name","newOptionA","push","Ranking","setList","sortedList","Score","fields","entries","renderEntry","index","Played","entriesPerPage","App","path","children","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.87e6f403.chunk.js","sourcesContent":["// const PREFIX = 'https://cors-anywhere-anton.herokuapp.com/'\nconst PREFIX = ''\n\nexport const writeDB = async (winner, loser) => {\n    fetch(PREFIX + `http://taiwanese-cuisine-backend-dev.ap-northeast-2.elasticbeanstalk.com/vote?losser=${loser}&winner=${winner}`).then(res => {\n      console.log(res)\n    }).catch(error => {\n      console.error(error)\n    })\n  \n};\n\n/**\n * @return {Promise<{Name:string, Image:string, Played: number, Score: number}[]>}\n */\nexport const getList = async () => {\n  const response = await fetch(PREFIX + 'http://taiwanese-cuisine-backend-dev.ap-northeast-2.elasticbeanstalk.com/cuisinef/');\n  const list = await response.json()\n  return list\n}\n\n// const mockList = [\n//   {\n//     name: '米粉湯',\n//     url: 'https://d3l76hx23vw40a.cloudfront.net/recipe/hq24-026b.jpg',\n//     score: 1012\n//   },\n//   {\n//     name: '貢丸湯',\n//     url: 'https://www.wecook123.com/wp-content/uploads/2017/05/%E6%89%8B%E5%B7%A5%E8%B2%A2%E4%B8%B8%E6%B9%AF_28I7yL9wGz.jpg',\n//     score: 101\n//   },\n//   {\n//     name: '雞排',\n//     url: 'https://attach.setn.com/newsimages/2018/07/13/1443100-XXL.jpg',\n//     score: 2000\n//   },\n//   {\n//     name: '大腸包小腸',\n//     url: 'https://taiwan.sharelife.tw/tw-feat-store-img/44721/c840130617285911.jpg',\n//     score: 988\n//   },\n//   {\n//     name: '茶葉蛋',\n//     url: 'https://s.yimg.com/zp/MerchandiseImages/091E0DD0B1-Product-17939407.jpg',\n//     score: 371\n//   },\n//   {\n//     name: '蔥抓餅加蛋',\n//     url: 'https://pic.pimg.tw/hsoldbody/1502790612-80446948_wn.jpg',\n//     score: 209\n//   },\n//   {\n//     name: '鹹水雞',\n//     url: 'https://i.ytimg.com/vi/QAxQKKDGzXQ/maxresdefault.jpg',\n//     score: 1638\n//   },\n//   {\n//     name: '鹽酥雞',\n//     url: 'https://pic.pimg.tw/dreamycat0421/1371371670-1921309306.jpg',\n//     score: 1789\n//   },\n//   {\n//     name: '地瓜球',\n//     url: 'https://cf.shopee.tw/file/4868ce3c08b415661f293e65c79e1e01',\n//     score: 982\n//   },\n//   {\n//     name: '蚵仔煎',\n//     url: 'https://ali.xinshipu.cn/20180128_85/original/1517092639487.jpg',\n//     score: 1123\n//   },\n//   {\n//     name: '火雞肉飯',\n//     url: 'https://i1.wp.com/amonblog.com/wp-content/uploads/2017/09/1504274266-08d0794ef558a335ee5b0e6f10f1339b.jpg?w=640&ssl=1',\n//     score: 1017\n//   },\n// ]","import React from 'react';\n\nfunction CroppedImg({ url, height, width }) {\n  return (\n    <img\n      style={{\n        width: width,\n        height: height,\n        objectFit: 'cover',\n      }}\n      src={url}\n      alt={url}\n    />\n  );\n}\n\nexport default CroppedImg;\n","import React, { useState, useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ButtonBase } from '@aragon/ui';\nimport { Card, CardHeader, CardBody, Button } from 'shards-react';\nimport { getList, writeDB } from './utils';\nimport CroppedImg from '../CroppedImg';\n\nfunction chooseFromList(targetList) {\n  const random = targetList[Math.floor(Math.random() * targetList.length)];\n  return random;\n}\n\nfunction removeFromList(list, item) {\n  return list.filter((element) => element !== item);\n}\n\nfunction initialAB(indexs) {\n  const shuffled = indexs.sort(() => 0.5 - Math.random());\n  let selected = shuffled.slice(0, 2);\n  return selected;\n}\n\nfunction Compare() {\n  const history = useHistory();\n\n  const [done, setDone] = useState(false);\n  const [foodList, setFoodList] = useState([])\n  const [indexList, updateIndexList] = useState([]);\n  const [optionAIdx, setOptionAIdx] = useState(0);\n  const [optionBIdx, setOptionBIdx] = useState(0);\n\n  useMemo(async() => {\n    const _foodList = await getList()\n    const initIndexs = Array.from(Array(11).keys());\n    const [a, b] = initialAB(initIndexs);\n    setOptionAIdx(a);\n    setOptionBIdx(b);\n    let _list = removeFromList(initIndexs, a);\n    _list = removeFromList(_list, b);\n    setFoodList(_foodList)\n    updateIndexList(_list);\n  }, []);\n\n  const onClickOptionA = () => {\n    writeDB(optionAIdx, optionBIdx);\n    if (indexList.length === 0) {\n      setDone(true);\n      return;\n    }\n    const newOptionB = chooseFromList(indexList);\n    const _list = removeFromList(indexList, newOptionB);\n    updateIndexList(_list);\n    setOptionBIdx(newOptionB);\n  };\n\n  const onClickOptionB = () => {\n    writeDB(optionBIdx, optionAIdx);\n    if (indexList.length === 0) {\n      setDone(true);\n      return;\n    }\n    const newOptionA = chooseFromList(indexList);\n    const _list = removeFromList(indexList, newOptionA);\n    updateIndexList(_list);\n    setOptionAIdx(newOptionA);\n  };\n\n  return (\n    <>\n      <div style={{ paddingTop: '6%', paddingBottom:  '4%',  textAlign: 'center', fontSize: 36 }}>\n        哪個好吃\n      </div>\n      <div style={{ textAlign: 'center', }}>\n        <div style={{ padding: '3%', display: 'inline-block' }}>\n          <Card style={{ maxWidth: '650' }}>\n          <ButtonBase onClick={onClickOptionA}>\n            <CardHeader>選項A</CardHeader>\n            <CroppedImg \n              width={400}\n              height={300}\n              url={foodList.length === 0 ? 'https://place-hold.it/300x200' : foodList[optionAIdx].Image}\n            />\n            <CardBody>\n            <div style={{fontSize: 25}} >{foodList.length === 0 ? '' : foodList[optionAIdx].Name}</div>\n            </CardBody>\n            </ButtonBase>\n          </Card>\n        </div>\n        <div style={{ padding: '3%', display: 'inline-block' }}>\n          <Card style={{ maxWidth: '500' }}>\n          <ButtonBase onClick={onClickOptionB}>\n            <CardHeader>選項B</CardHeader>\n            <CroppedImg \n              width={400}\n              height={300}\n              url={foodList.length === 0 ? 'https://place-hold.it/300x200' : foodList[optionBIdx].Image}\n            />\n            <CardBody>\n              <div style={{fontSize: 25}} >{ foodList.length === 0 ? '' : foodList[optionBIdx].Name}</div>\n            </CardBody>\n            </ButtonBase>\n          </Card>\n        </div>\n      </div>\n      <div style={{ textAlign: 'center' }}>\n        <div style={{ padding: '3%', display: 'inline-block' }}>\n          {done ? (\n            <Button display='true' onClick={() => history.push('/ranking')}>\n              {' '}\n              看結果{' '}\n            </Button>\n          ) : (\n            <></>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Compare;\n\n","import React, { useMemo, useState } from 'react';\nimport { DataView } from '@aragon/ui'\nimport CroppedImg from '../CroppedImg'\n\nimport { getList } from '../Compare/utils';\n\nfunction Ranking() {\n\n  const [foodList, setList] = useState([])\n\n  useMemo(async()=>{\n    const _list = await getList()\n    const sortedList = _list.sort((a, b) => a.Score > b.Score ? -1 : 1)\n    setList(sortedList)\n  }, [])\n\n  return (\n    <>\n      <div style={{ padding: '6%', textAlign: 'center', fontSize: 36 }}>\n        小吃排行榜\n      </div>\n      <DataView\n        fields={[ '排名', '', '名稱' , '分數', '出賽']}\n        entries={foodList.slice(0, 10)}\n        renderEntry={(item, index) => {\n          return [\n            index + 1,\n            <CroppedImg url={item.Image} width={200} height={120}/>,\n            <div style={{fontSize:25}}> {item.Name} </div>,\n            item.Score,\n            item.Played\n          ]\n        }}\n        entriesPerPage={5}\n      />\n    </>\n  );\n}\n\nexport default Ranking;\n","import React from 'react';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Compare from './Components/Compare'\nimport Ranking from './Components/Ranking'\n\nimport { Main } from '@aragon/ui'\n\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\n\nfunction App() {\n  return (\n    <Main>\n    <Router>\n        <Switch>\n          <Route path='/ranking/' children={<Ranking/>} />\n          <Route path='/' children={<Compare/>} />\n        </Switch>\n    </Router>\n    </Main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}